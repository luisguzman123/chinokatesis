/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import Acceso.Menu;
import clases.Conexion;
import clases.Metodos;
import com.toedter.calendar.JCalendar;
import java.awt.event.KeyEvent;
import java.net.URL;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author User
 */
public class orden_produccion extends javax.swing.JFrame {

    public static int Bban;
    public static String operacion;
    public static String confirmar;
    public static String mensaje;

//conexion conexion =new conexion();
    javax.swing.table.DefaultTableModel matriz;
    int resp = 0;
//  private Connection conn;
//
//    private ResultSet recur,rs;
//    String Buscar;
//    static String bd="produ";
//    static String login="root";
//    static String password="";
//    static String url="jdbc:mysql://localhost/" + bd;
    Statement snt;

    /**
     * Creates new form orden_produccion
     */
    public orden_produccion() {
        initComponents();

        this.setLocationRelativeTo(null);//centrar
        matriz = (javax.swing.table.DefaultTableModel) grilla.getModel();

        usuario.setText(Menu.empleado);
        sucursal.setText(Menu.Sucursal);
        nro_ord.setText(Metodos.siguienteCodigo("cod_or_prod", "orden_produccion"));
        fecha_dt.setDate(new JCalendar().getDate());
        Metodos.agregarClicDerechoATabla(grilla);
        Metodos.agregarClicDerechoATabla(grilla1);
        Metodos.agregarClicDerechoATabla(grilla2);
        cargarListaEstado();
        cargarListaDeposito();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        menu_productos = new javax.swing.JPopupMenu();
        eliminar = new javax.swing.JMenuItem();
        menu_materia_prima = new javax.swing.JPopupMenu();
        eliminar_materia = new javax.swing.JMenuItem();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nro_ord = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        codprodu = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        desprod = new javax.swing.JTextField();
        cant = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        nro_presupuesto_txt = new javax.swing.JTextField();
        fecha_dt = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        deposito_lst = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        grilla = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        nuevo_btn = new javax.swing.JButton();
        BAnular = new javax.swing.JButton();
        Bgrabar = new javax.swing.JButton();
        cancelar_btn = new javax.swing.JButton();
        salir_btn = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        codprodu1 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        desprod1 = new javax.swing.JTextField();
        cant1 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        grilla1 = new javax.swing.JTable();
        jLabel18 = new javax.swing.JLabel();
        nombre_personal_txt = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        cod_personal_txt = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        grilla2 = new javax.swing.JTable();
        jLabel23 = new javax.swing.JLabel();
        cod_equipo_txt = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        usuario = new javax.swing.JLabel();
        sucursal = new javax.swing.JLabel();
        inicio_dt = new com.toedter.calendar.JDateChooser();
        final_dt = new com.toedter.calendar.JDateChooser();
        agregar_equipo_btn = new javax.swing.JButton();
        etapa_lst = new javax.swing.JComboBox<>();

        eliminar.setText("Eliminar");
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });
        menu_productos.add(eliminar);

        eliminar_materia.setText("Eliminar");
        eliminar_materia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminar_materiaActionPerformed(evt);
            }
        });
        menu_materia_prima.add(eliminar_materia);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Orden Produccion");

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setText("Orden produccion Nro.:");

        nro_ord.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        nro_ord.setEnabled(false);
        nro_ord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nro_ordActionPerformed(evt);
            }
        });
        nro_ord.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nro_ordKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nro_ordKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setText("Fecha:");

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED), "Datos Productos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Cod.:");

        codprodu.setEditable(false);
        codprodu.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        codprodu.setEnabled(false);
        codprodu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codproduActionPerformed(evt);
            }
        });
        codprodu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                codproduKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                codproduKeyTyped(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Descripcion:");

        desprod.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        desprod.setEnabled(false);
        desprod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                desprodKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                desprodKeyTyped(evt);
            }
        });

        cant.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        cant.setEnabled(false);
        cant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cantActionPerformed(evt);
            }
        });
        cant.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cantKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cantKeyTyped(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Cantidad:");

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("F2 BUSCADOR");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addComponent(codprodu, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(desprod, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cant, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(39, 39, 39))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(codprodu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(desprod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addContainerGap())
        );

        jLabel3.setBackground(new java.awt.Color(255, 51, 102));
        jLabel3.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 102));
        jLabel3.setText("Nro. Presu");

        nro_presupuesto_txt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        nro_presupuesto_txt.setEnabled(false);
        nro_presupuesto_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nro_presupuesto_txtActionPerformed(evt);
            }
        });
        nro_presupuesto_txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nro_presupuesto_txtKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nro_presupuesto_txtKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel4.setText("Buscar (F2)");

        deposito_lst.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 102, 102));
        jLabel5.setText("Deposito");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nro_presupuesto_txt))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(nro_ord, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(27, 27, 27)
                                .addComponent(fecha_dt, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(98, 98, 98)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deposito_lst, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nro_ord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(fecha_dt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(deposito_lst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nro_presupuesto_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        grilla.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CODIGO", "DESCRIPCION", "CANTIDAD"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grilla.getTableHeader().setReorderingAllowed(false);
        grilla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grillaMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                grillaMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(grilla);

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 102, 102));
        jLabel6.setText("Equipo de trabajo");

        jLabel13.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 102, 102));
        jLabel13.setText("Usuario:");

        jLabel14.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 102, 102));
        jLabel14.setText("Sucursal:");

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        nuevo_btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        nuevo_btn.setText("nuevo");
        nuevo_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevo_btnActionPerformed(evt);
            }
        });

        BAnular.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        BAnular.setText("anular");
        BAnular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BAnularActionPerformed(evt);
            }
        });

        Bgrabar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Bgrabar.setText("grabar");
        Bgrabar.setEnabled(false);
        Bgrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BgrabarActionPerformed(evt);
            }
        });

        cancelar_btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cancelar_btn.setText("cancelar");
        cancelar_btn.setEnabled(false);
        cancelar_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelar_btnActionPerformed(evt);
            }
        });

        salir_btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        salir_btn.setText("salir");
        salir_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salir_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(nuevo_btn)
                .addGap(3, 3, 3)
                .addComponent(BAnular)
                .addGap(11, 11, 11)
                .addComponent(Bgrabar)
                .addGap(9, 9, 9)
                .addComponent(cancelar_btn)
                .addGap(9, 9, 9)
                .addComponent(salir_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(nuevo_btn)
            .addComponent(BAnular)
            .addComponent(Bgrabar)
            .addComponent(cancelar_btn)
            .addComponent(salir_btn)
        );

        jLabel8.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 102, 102));
        jLabel8.setText("ORDEN DE PRODUCCIÓN");

        jPanel4.setBackground(new java.awt.Color(0, 102, 102));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED), "Datos Productos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Cod.:");

        codprodu1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        codprodu1.setEnabled(false);
        codprodu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codprodu1ActionPerformed(evt);
            }
        });
        codprodu1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                codprodu1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                codprodu1KeyTyped(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Descripcion:");

        desprod1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        desprod1.setEnabled(false);
        desprod1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                desprod1KeyPressed(evt);
            }
        });

        cant1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        cant1.setEnabled(false);
        cant1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cant1ActionPerformed(evt);
            }
        });
        cant1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cant1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cant1KeyTyped(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Cantidad:");

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("F2 BUSCADOR");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(58, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addGap(18, 18, 18)
                .addComponent(codprodu1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(jLabel16)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                    .addComponent(desprod1))
                .addGap(18, 18, 18)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cant1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(codprodu1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cant1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(desprod1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        grilla1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        grilla1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CODIGO", "DESCRIPCION", "CANTIDAD"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grilla1.getTableHeader().setReorderingAllowed(false);
        grilla1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grilla1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(grilla1);

        jLabel18.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 102, 102));
        jLabel18.setText("Materiales a utilizar");

        nombre_personal_txt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        nombre_personal_txt.setEnabled(false);

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel19.setText("Personal");

        cod_personal_txt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        cod_personal_txt.setEnabled(false);
        cod_personal_txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cod_personal_txtKeyPressed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel20.setText("Fecha de inicio");

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel21.setText("Fecha final");

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel22.setText("Etapa");

        grilla2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        grilla2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Fecha Inicio", "Fecha Final", "Personal", "Etapa"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grilla2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grilla2MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(grilla2);

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel23.setText("Codigo Equipo trabajo");

        cod_equipo_txt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        cod_equipo_txt.setEnabled(false);

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        usuario.setText("usuario");

        sucursal.setText("sucursal");

        inicio_dt.setDateFormatString("dd/MM/yyyy");

        final_dt.setDateFormatString("dd/MM/yyyy");

        agregar_equipo_btn.setText("Agregar");
        agregar_equipo_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregar_equipo_btnActionPerformed(evt);
            }
        });

        etapa_lst.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(344, 344, 344)
                .addComponent(jLabel13)
                .addGap(18, 18, 18)
                .addComponent(usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel8)
                .addGap(69, 69, 69)
                .addComponent(jLabel14)
                .addGap(18, 18, 18)
                .addComponent(sucursal, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 672, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 672, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 669, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 672, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addGap(10, 10, 10)
                        .addComponent(cod_equipo_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addGap(4, 4, 4)
                        .addComponent(inicio_dt, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(final_dt, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(jLabel22))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(etapa_lst, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(agregar_equipo_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cod_personal_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(nombre_personal_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))))))
            .addGroup(layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(usuario)))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel14))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(sucursal)))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(jLabel18)
                        .addGap(6, 6, 6)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 564, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel23))
                            .addComponent(cod_equipo_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inicio_dt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(final_dt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel20)
                                    .addComponent(jLabel21))))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel19))
                            .addComponent(cod_personal_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nombre_personal_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel22)
                                    .addComponent(etapa_lst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(agregar_equipo_btn))
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel4.getAccessibleContext().setAccessibleName("Datos Materiales");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BAnularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BAnularActionPerformed
        operacion = "anular";
        this.cancelar_btn.setEnabled(true);
        this.nuevo_btn.setEnabled(false);
        this.BAnular.setEnabled(false);
        this.Bgrabar.setEnabled(false);
        this.nro_ord.setEnabled(true);
        this.nro_ord.requestFocus();
        confirmar = "¿Desea anular el  registro?";
        mensaje = "Registro anulado con exito";
        nro_ord.setText("");
    }//GEN-LAST:event_BAnularActionPerformed

    private void nuevo_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevo_btnActionPerformed
        ban = "nuevo";
        codprodu.setEnabled(true);
        nro_presupuesto_txt.requestFocus();
        this.cancelar_btn.setEnabled(true);
        this.nuevo_btn.setEnabled(false);
        this.BAnular.setEnabled(false);
        this.Bgrabar.setEnabled(false);
        nro_presupuesto_txt.setEnabled(true);
        operacion = "agregar";
        Bgrabar.setEnabled(true);
        confirmar = "¿Desea grabar el nuevo registro?";
        mensaje = "Registro grabado con exito";
//    jButton6.setEnabled(false);


    }//GEN-LAST:event_nuevo_btnActionPerformed

    private void cantKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantKeyPressed
        if (evt.getKeyCode() == 10) {
            reemplazar();
            // presiona ENTER
            if (Integer.parseInt(cant.getText()) < 1) {
                JOptionPane.showMessageDialog(null, "La cantidad a cargar debe ser superior a 0 (CERO)", "ERROR", JOptionPane.ERROR_MESSAGE);
            } else {
                int subtotal;
                subtotal = Integer.parseInt(cant.getText());

                total = total + subtotal;
//          Letras.setText(numero.nletra(total));

                String registro[] = new String[]{codprodu.getText(), desprod.getText(), cant.getText(), String.valueOf(subtotal)};
                matriz.addRow(registro);
                limpiartext();
                cant.setEnabled(false);
                codprodu.setEnabled(true);
                codprodu.requestFocus();
            }
        }  // TODO add your handling code here:
    }//GEN-LAST:event_cantKeyPressed

    private void codproduActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codproduActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codproduActionPerformed

    private void codproduKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codproduKeyPressed
//              if(evt.getKeyCode()==123) { // presiona F12
//            new bus_art(null,true).setVisible(true);// llama al buscador
//            
//            if (bus_art.vdes.isEmpty())//no trae nada
//            {
//                return;
//            }else // trae datos
//            {
//                codprodu.setText(bus_art.vcod);
//            }
//        }//fin F12

        if (evt.getKeyCode() == 35) { //35// presiona TECLA FIN
            Bgrabar.setEnabled(true);
            Bgrabar.requestFocus();
            // JOptionPane.showMessageDialog(null,"No puede Ingresar Letras!");
        }
//        if(evt.getKeyCode()==123) { // presiona F12
//        Bgrabar.setEnabled(true);
//            Bgrabar.requestFocus();
//        } // TODO add your handling code here:
    }//GEN-LAST:event_codproduKeyPressed

    private void BgrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BgrabarActionPerformed
        grabarAnularOrden();

    }//GEN-LAST:event_BgrabarActionPerformed

    private void grabarAnularOrden() {

        int respuesta = 5;
        String update = "";

        respuesta = JOptionPane.showConfirmDialog(null, confirmar,"ATENCION", JOptionPane.YES_NO_OPTION);
        if (respuesta == 0) {
            String orden_cabecera = "";

            if (operacion.equals("agregar")) {
                //validaciones
                //numero de presupuesto
                if (nro_presupuesto_txt.getText().trim().isEmpty()) {
                    JOptionPane.showMessageDialog(rootPane, "Busca un presupuesto con F2");
                    nro_presupuesto_txt.requestFocus();
                    return;
                }
                //deposito seleccionado
                if (deposito_lst.getSelectedIndex() == 0) {
                    JOptionPane.showMessageDialog(rootPane, "Selecciona un deposito");
                    return;
                }
                //tabla vacia en presupuesto
                if (grilla.getRowCount() == 0) {
                    JOptionPane.showMessageDialog(rootPane,
                            "No cuenta con registros en la tabla de presupuesto");
                    return;
                }
                //tabla vacia en materia prima
                if (grilla1.getRowCount() == 0) {
                    JOptionPane.showMessageDialog(rootPane,
                            "No cuenta con registros en la tabla de materia prima");
                    return;
                }
                //tabla vacia equipo de trabajo
                if (grilla2.getRowCount() == 0) {
                    JOptionPane.showMessageDialog(rootPane,
                            "No cuenta con registros en la tabla de equipo de trabajo");
                    return;
                }

                orden_cabecera = "INSERT INTO orden_produccion(\n"
                        + "fecha, estado, usu_id, emp_id, sucur_id, pre_cod)\n"
                        + "VALUES ('"
                        + Metodos.dameFechaFormateadaSQL(fecha_dt.getDate()) + "', "
                        + "'ACTIVO', "
                        + Menu.idUsuario + ", "
                        + Menu.idEmpleado + ", "
                        + Menu.idSucursal + ", "
                        + nro_presupuesto_txt.getText()
                        + ");";
            }

            String anular = "";
            if (operacion.equals("anular")) {
                 anular = "UPDATE orden_produccion SET estado = 'ANULADO' "
                        + "WHERE cod_or_prod = "+nro_ord.getText();
            }

            Conexion cn = new Conexion();
            try {
                cn.conectar();
                System.out.println(orden_cabecera);

                cn.actualizar(orden_cabecera);
                //operacion anular
                if(operacion.equals("anular")){
                    cn.actualizar(anular);
                    JOptionPane.showMessageDialog(rootPane, mensaje);
                    cancelar_btn.doClick();
                }
                //guardamos el detalle
                if (operacion.equals("agregar")) {
                    int filas = grilla.getRowCount();
                    String detalle = "";
                    String cod_orden_produccion = Metodos.ultimoCodigo("cod_or_prod", "orden_produccion");
                    //guardamos el detalle de la operacion
                    for (int i = 0; i < filas; i++) {
                        detalle = "INSERT INTO detalle_orden_produccion(\n"
                                + "cod_or_prod, cod_depo, sucur_id, pro_cod, cantidad)\n"
                                + "VALUES ("
                                + cod_orden_produccion + ", "
                                + deposito_lst.getSelectedItem().toString().split("-")[0] + ", "
                                + Menu.idSucursal + ", "
                                + grilla.getValueAt(i, 0).toString() + ", "
                                + grilla.getValueAt(i, 2).toString() + ");";
                        cn.actualizar(detalle);

                    }
                    String materiales_utilizar = "";
                    filas = grilla1.getRowCount();
                    //guardamos el detalle de la operacion
                    for (int i = 0; i < filas; i++) {
                        materiales_utilizar = "INSERT INTO materiales_a_utilizar(\n"
                                + "cod_or_prod, cod_depo, sucur_id, cod_materia, cantidad)\n"
                                + "    VALUES ("
                                + cod_orden_produccion + ", "
                                + deposito_lst.getSelectedItem().toString().split("-")[0] + ", "
                                + Menu.idSucursal + ", "
                                + grilla1.getValueAt(i, 0).toString() + ", "
                                + grilla1.getValueAt(i, 2).toString() + ");";
                        cn.actualizar(materiales_utilizar);

                    }

                    //guardamos la cabecera de equipo de trabajo
                    String equipo_cabecera = "INSERT INTO equipo_de_trabajo(\n"
                            + " cod_or_prod, fecha_inicio, fecha_final, estado)\n"
                            + "VALUES ("
                            + cod_orden_produccion + ", '"
                            + Metodos.dameFechaFormateadaSQL(inicio_dt.getDate()) + "', '"
                            + Metodos.dameFechaFormateadaSQL(final_dt.getDate()) + "', "
                            + "'ACTIVO');";
                    cn.actualizar(equipo_cabecera);
                    filas = grilla2.getRowCount();
                    String equipo_detalle = "";
                    String cod_equipo_trabajo = Metodos.ultimoCodigo("cod_equipo_trabajo", "equipo_de_trabajo");
                    for (int i = 0; i < filas; i++) {
                        equipo_detalle = "INSERT INTO detalle_equipo_trabajo(\n"
                                + "cod_equipo_trabajo, cod_or_prod, emp_id, observacion, cod_etapas)\n"
                                + "VALUES ("
                                + cod_equipo_trabajo + ", "
                                + cod_orden_produccion + ", "
                                + grilla2.getValueAt(i, 3).toString().split("-")[0]+ ", "
                                + "'NA', "
                                + grilla2.getValueAt(i, 4).toString().split("-")[0] + ");";
                        cn.actualizar(equipo_detalle);

                    }

                    JOptionPane.showMessageDialog(rootPane, "Guardado correctamente");
                    limpiar();

                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(etapasDeProduccion.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ex.getMessage());

            } catch (SQLException ex) {
                Logger.getLogger(etapasDeProduccion.class.getName()).log(Level.SEVERE, null, ex);

//                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        } else if (respuesta == 1 || respuesta == 2) {
            JOptionPane.showMessageDialog(null, "Cancelado");

        }
    }
    private void cancelar_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelar_btnActionPerformed
        des_text();
        clear_text();
//        jButton6.setEnabled(true);
        this.cancelar_btn.setEnabled(false);
        this.BAnular.setEnabled(true);
        this.nuevo_btn.setEnabled(true);
        this.Bgrabar.setEnabled(false);

        this.limpiargrilla();  // TODO add your handling code here:
    }//GEN-LAST:event_cancelar_btnActionPerformed


    private void cantKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantKeyTyped
        char caracter = evt.getKeyChar();
        int k = (int) evt.getKeyChar();
        if (((caracter < '0') || (caracter > '9')) && (k != 10) && (caracter != KeyEvent.VK_BACK_SPACE)) {
//        JOptionPane.showMessageDialog(null,"No Puede Ingresar Letras");
            evt.consume();
        } else {
            if (k == 10) {
                if (cant.getText().equals("") == false) {

                    cant.setEnabled(true);
                    cant.requestFocus();
                } else {
                    JOptionPane.showMessageDialog(null, "No Puede Dejar El Campo Vacio");
                    cant.setText("");
                    cant.requestFocus();

                }

            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_cantKeyTyped

    private void grillaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grillaMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_grillaMouseClicked

    private void nro_ordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nro_ordKeyTyped

}//GEN-LAST:event_nro_ordKeyTyped

    private void nro_ordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nro_ordKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_F2) {
            busOrdenProduccion.busqueda = "orden_produccion";
            new busOrdenProduccion().setVisible(true);
        }
}//GEN-LAST:event_nro_ordKeyPressed

    private void nro_ordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nro_ordActionPerformed
        if(nro_ord.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Buscar orden");
            return;
            
        }
        Bgrabar.setEnabled(true);
        Bgrabar.requestFocus();
        // TODO add your handling code here:
}//GEN-LAST:event_nro_ordActionPerformed

    private void cantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cantActionPerformed
        // TODO add your handling code here:
        Metodos.cargarTabla(grilla, new Object[]{
            codprodu.getText(),
            desprod.getText(),
            cant.getText()
        });
    }//GEN-LAST:event_cantActionPerformed

    private void codproduKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codproduKeyTyped
        char caracter = evt.getKeyChar();
        if (((caracter < '0')
                || (caracter > '9'))
                && (caracter != evt.VK_BACK_SPACE)) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "No puede Ingresar letras");
            codprodu.requestFocus();
        }
    }//GEN-LAST:event_codproduKeyTyped

    private void nro_presupuesto_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nro_presupuesto_txtActionPerformed

    }//GEN-LAST:event_nro_presupuesto_txtActionPerformed

    private void nro_presupuesto_txtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nro_presupuesto_txtKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_F2) { // presiona F2

            busPresupuestoProduccion.busqueda = "orden_produccion";
            new busPresupuestoProduccion().setVisible(true);
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!nro_presupuesto_txt.getText().trim().isEmpty()) {
                codprodu.setEnabled(true);
                desprod.setEnabled(true);
                cant.setEnabled(true);
                desprod.requestFocus();
                codprodu1.setEnabled(true);
                desprod1.setEnabled(true);
                cant1.setEnabled(true);
                habilitarEquipoTrabajo();
                cod_equipo_txt.setText(String.valueOf(Integer.parseInt(Metodos.ultimoCodigo("cod_equipo_trabajo", "equipo_de_trabajo")) + 1));
            } else {
                JOptionPane.showMessageDialog(rootPane, "Debes buscar un presupuesto de venta");
            }
        }
    }//GEN-LAST:event_nro_presupuesto_txtKeyPressed

    private void nro_presupuesto_txtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nro_presupuesto_txtKeyTyped

    }//GEN-LAST:event_nro_presupuesto_txtKeyTyped

    private void codprodu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codprodu1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codprodu1ActionPerformed

    private void codprodu1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codprodu1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_codprodu1KeyPressed

    private void codprodu1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codprodu1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_codprodu1KeyTyped

    private void cant1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cant1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cant1ActionPerformed

    private void cant1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cant1KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10) {
            reemplazar();
            // presiona ENTER
            if (Integer.parseInt(cant1.getText()) < 1) {
                JOptionPane.showMessageDialog(null, "La cantidad a cargar debe ser superior a 0 (CERO)", "ERROR", JOptionPane.ERROR_MESSAGE);
            } else {
                int subtotal;
                subtotal = Integer.parseInt(cant1.getText());

                total = total + subtotal;
//          Letras.setText(numero.nletra(total));

                Object registro[] = new Object[]{codprodu1.getText(), desprod1.getText(), cant1.getText()};
                int fila = -1;
                for (int i = 0; i < grilla1.getRowCount(); i++) {
                    if (grilla1.getValueAt(i, 0).toString().equals(codprodu1.getText())) {
                        fila = i;
                        break;
                    }
                }

                if (fila == -1) {
                    DefaultTableModel modelo = (DefaultTableModel) grilla1.getModel();
                    modelo.addRow(registro);
                } else {
                    int cantidad = Integer.parseInt(
                            grilla1.getValueAt(fila, 2).toString()) + Integer.parseInt(cant1.getText());
                    grilla1.setValueAt(cantidad, fila, 2);
                }
                limpiartext1();
                desprod1.requestFocus();
            }
        }
    }//GEN-LAST:event_cant1KeyPressed

    private void cant1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cant1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_cant1KeyTyped

    private void grilla1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grilla1MouseClicked
        // TODO add your handling code here:
        if (evt.isPopupTrigger()) {
            menu_materia_prima.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_grilla1MouseClicked

    private void salir_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salir_btnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_salir_btnActionPerformed

    private void grilla2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grilla2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_grilla2MouseClicked

    private void desprodKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_desprodKeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_desprodKeyTyped

    private void desprodKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_desprodKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_F2) {
            producto.operacion = "orden_produccion";
            new producto().setVisible(true);
            producto.operacion = "orden_produccion";
        }
    }//GEN-LAST:event_desprodKeyPressed

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
        // TODO add your handling code here:
        Metodos.eliminarFila(grilla, grilla.getSelectedRow());
    }//GEN-LAST:event_eliminarActionPerformed

    private void grillaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grillaMouseReleased
        // TODO add your handling code here:
        if (evt.isPopupTrigger()) {
            menu_productos.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_grillaMouseReleased

    private void desprod1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_desprod1KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_F2) {
            materiaPrima.busqueda = "orden_produccion";
            new materiaPrima().setVisible(true);
        }
    }//GEN-LAST:event_desprod1KeyPressed

    private void eliminar_materiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminar_materiaActionPerformed
        // TODO add your handling code here:
        Metodos.eliminarFila(grilla1, grilla1.getSelectedRow());
    }//GEN-LAST:event_eliminar_materiaActionPerformed

    private void cod_personal_txtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cod_personal_txtKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_F2) {
            empleado.busqueda = "orden_produccion";
            new empleado().setVisible(true);
        }
    }//GEN-LAST:event_cod_personal_txtKeyPressed

    private void agregar_equipo_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregar_equipo_btnActionPerformed
        // TODO add your handling code here:

        //validaciones
        if (inicio_dt.getDate().after(final_dt.getDate())) {
            JOptionPane.showMessageDialog(rootPane, "Verifica las fechas de inicio y fin");
            return;
        }
        if (etapa_lst.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Selecciona una etapa");
            return;
        }

        Object[] fila = new Object[]{
            cod_equipo_txt.getText(),
            Metodos.dameFechaFormateada(inicio_dt.getDate()),
            Metodos.dameFechaFormateada(final_dt.getDate()),
            cod_personal_txt.getText() + "-" + nombre_personal_txt.getText(),
            etapa_lst.getSelectedItem()
        };

        for (int i = 0; i < grilla2.getRowCount(); i++) {
            if (grilla2.getValueAt(i, 0).equals(fila[0])
                    && grilla2.getValueAt(i, 1).equals(fila[1])
                    && grilla2.getValueAt(i, 2).equals(fila[2])
                    && grilla2.getValueAt(i, 3).equals(fila[3])
                    && grilla2.getValueAt(i, 4).equals(fila[4])) {
                JOptionPane.showMessageDialog(rootPane, "Item repetido en la fila " + (i + 1));
                return;
            }
        }

        Metodos.cargarTabla(grilla2, fila);
    }//GEN-LAST:event_agregar_equipo_btnActionPerformed

    /**
     * @param args the command line arguments orden_produccion ord_cod
     */
    private void limpiartext() {
        codprodu.setText("");
        cant.setText("");
        desprod.setText("");

        //un.setText("");
    }

    private void limpiartext1() {
        codprodu1.setText("");
        cant1.setText("");
        desprod1.setText("");

        //un.setText("");
    }

    private void habilitarEquipoTrabajo() {
        cod_equipo_txt.setEnabled(true);
        cod_personal_txt.setEnabled(true);
        nombre_personal_txt.setEnabled(true);

        inicio_dt.setDate(new JCalendar().getDate());
        final_dt.setDate(new JCalendar().getDate());

    }

    private void clear_text() {
        fecha_dt.setDate(new JCalendar().getDate());
        nro_ord.setText("");
        codprodu.setText("");

    }

    private void limpiar() {
        nro_ord.setText(Metodos.siguienteCodigo("cod_or_prod", "orden_produccion"));
        fecha_dt.setDate(new JCalendar().getDate());
        deposito_lst.setSelectedIndex(0);
        nro_presupuesto_txt.setText("");
        cod_equipo_txt.setText("");
        codprodu.setText("");
        desprod.setText("");
        cant.setText("");
        codprodu1.setText("");
        desprod1.setText("");
        cant1.setText("");
        inicio_dt.setDate(new JCalendar().getDate());
        final_dt.setDate(new JCalendar().getDate());
        cod_personal_txt.setText("");
        nombre_personal_txt.setText("");
        etapa_lst.setSelectedIndex(0);
        nro_presupuesto_txt.requestFocus();

    }

    private void des_text() {
        nro_ord.setEnabled(false);
        codprodu.setEnabled(false);
//          lcod.setEnabled(false);
//          lcod1.setEnabled(false);
//          Lnombre.setEnabled(false);
//          Lnombre1.setEnabled(false);
    }

    ///////////////////////
    private void limpiargrilla() {
        for (int i = grilla.getRowCount() - 1; i >= 0; i--) {
            matriz.removeRow(i);
        }
    }
    //////////////

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new orden_produccion().setVisible(true);
            }
        });

    }

    private void salir() {
        int mensaje = JOptionPane.showConfirmDialog(this, "¿SALIR?", "CONFIRMAR", JOptionPane.YES_NO_OPTION);
        if (mensaje == JOptionPane.YES_OPTION) {
            dispose();
        }
    }

    private void cargarListaEstado() {
        Conexion cn = new Conexion();

        try {
            cn.conectar();
            ResultSet etapas = cn.consultar("SELECT * FROM etapas_produccion WHERE estado ILIKE '%ACTIVO%'  "); //order by ordena de menor a mayor, si se quiere de mayor a menor se le agrega desc al final

            etapa_lst.removeAllItems();
            etapa_lst.addItem("Seleccionar etapa");
            if (etapas.isBeforeFirst()) {
                while (etapas.next()) {
                    etapa_lst.addItem(etapas.getInt("cod_etapas"
                            + "") + "-" + etapas.getString("eta_desc").trim());
                }
            }
        } catch (ClassNotFoundException ex) {

            Logger.getLogger(orden_produccion.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(orden_produccion.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void cargarListaDeposito() {
        Conexion cn = new Conexion();

        try {
            cn.conectar();
            ResultSet deposito = cn.consultar("SELECT * FROM deposito WHERE sucur_id = " + Menu.idSucursal); //order by ordena de menor a mayor, si se quiere de mayor a menor se le agrega desc al final

            deposito_lst.removeAllItems();
            deposito_lst.addItem("Selecciona un deposito");
            if (deposito.isBeforeFirst()) {
                while (deposito.next()) {
                    deposito_lst.addItem(deposito.getInt("cod_depo") + "-"
                            + deposito.getString("depo_desc").trim());
                }
            }
        } catch (ClassNotFoundException ex) {

            Logger.getLogger(orden_produccion.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(orden_produccion.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private String ban;
    public String iva = "";
    public ResultSet resu;
    public int total, totaliva5, totaliva10, totaliva, tocant, totales;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BAnular;
    private javax.swing.JButton Bgrabar;
    private javax.swing.JButton agregar_equipo_btn;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JButton cancelar_btn;
    public static javax.swing.JTextField cant;
    public static javax.swing.JTextField cant1;
    private javax.swing.JTextField cod_equipo_txt;
    public static javax.swing.JTextField cod_personal_txt;
    public static javax.swing.JTextField codprodu;
    public static javax.swing.JTextField codprodu1;
    private javax.swing.JComboBox<String> deposito_lst;
    public static javax.swing.JTextField desprod;
    public static javax.swing.JTextField desprod1;
    private javax.swing.JMenuItem eliminar;
    private javax.swing.JMenuItem eliminar_materia;
    private javax.swing.JComboBox<String> etapa_lst;
    private com.toedter.calendar.JDateChooser fecha_dt;
    private com.toedter.calendar.JDateChooser final_dt;
    public static javax.swing.JTable grilla;
    private javax.swing.JTable grilla1;
    private javax.swing.JTable grilla2;
    private com.toedter.calendar.JDateChooser inicio_dt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JPopupMenu menu_materia_prima;
    private javax.swing.JPopupMenu menu_productos;
    public static javax.swing.JTextField nombre_personal_txt;
    public static javax.swing.JTextField nro_ord;
    public static javax.swing.JTextField nro_presupuesto_txt;
    private javax.swing.JButton nuevo_btn;
    private javax.swing.JButton salir_btn;
    private javax.swing.JLabel sucursal;
    private javax.swing.JLabel usuario;
    // End of variables declaration//GEN-END:variables

    public void reemplazar() {
        boolean encontro = false;
        for (int fila = 0; fila < grilla.getRowCount(); fila++) {
            if (codprodu.getText().equals(grilla.getValueAt(fila, 0).toString())) {
                encontro = true;
                matriz.removeRow(fila);
            }
        }
    }

    public String fecha_inicio = "";
    public String fechafin = "";

//     private void cargar_fechas()
//    {
//        try {
//
//            conn.sentencia = conn.conexion.createStatement();
//            conn.resultado = conn.sentencia.executeQuery("select curdate() as fecha ");
//            conn.resultado.next();
//               fechainicio.setDate(conn.resultado.getDate("fecha"));
//            fechafinal.setDate(conn.resultado.getDate("fecha"));
//        } //fin generar
//        catch (SQLException ex) {
//            Logger.getLogger(orden_produccion.class.getName()).log(Level.SEVERE, null, ex);
//        }
//	
//}
//       private void verificar_fechaini()//throws ClassNotFoundException, InstantiationException, IllegalAccessException
//{
//                try
//                {
//                Calendar cal = Calendar.getInstance();
//                cal.setTime(fechainicio.getDate());
//                int dia = cal.get(Calendar.DAY_OF_MONTH);
//                int mes = cal.get(Calendar.MONTH) + 1;
//                String sdia = "";
//                String smes = "";
//                if (dia < 10)
//                {
//                    sdia = "0";
//                }
//                sdia += dia;
//                if (mes < 10)
//                {
//                    smes = "0";
//                }
//                smes += mes;
//                String fecha = cal.get(Calendar.YEAR) + "-" + smes + "-" + sdia;
//                fecha_inicio=fecha;
//               ver_conex conn =new ver_conex();
//                conn.sentencia = conn.conexion.createStatement();
//                conn.resultado = conn.sentencia.executeQuery("CALL verif_fecha ('"+fecha+"', CURDATE())");
//                boolean encontro = conn.resultado.next();
//                if (encontro == true)
//                {
//                                if (conn.resultado.getString("resul").equals("error"))
//                {
//                 JOptionPane.showMessageDialog(null, "LA FECHA INICIAL DEBE CORERSPONDER A ESTE AÑO","ATENCION", JOptionPane.WARNING_MESSAGE);
//                
//                }
//                 else
//              {
//                  
//                    
//                if (conn.resultado.getString("resul").equals("verdadero"))
//                {
//                 fechafinal.setEnabled(true);
//                 fechafinal.requestFocus();
//                fechainicio.setEnabled(false);
//                
//                } 
//                
//
//                else
//              {
//                JOptionPane.showMessageDialog(null, "LA FECHA INICIAL NO PUEDE SER MENOR A LA DE HOY","ATENCION", JOptionPane.WARNING_MESSAGE);
//                }
//                
//                }
//                }
//                else
//                {
//                JOptionPane.showMessageDialog(null, "NO ESTA VERIFICANDO","ATENCION", JOptionPane.INFORMATION_MESSAGE);
//                }
//                }
//                catch (SQLException ex)
//                {
//                    Logger.getLogger(orden_produccion.class.getName()).log(Level.SEVERE, null, ex);
//                }
//}
// private void verificar_fechafin()//throws ClassNotFoundException, InstantiationException, IllegalAccessException
//
// {
//          try
//            {
//                Calendar cal = Calendar.getInstance();
//                cal.setTime(fechafinal.getDate());
//                int dia = cal.get(Calendar.DAY_OF_MONTH);
//                int mes = cal.get(Calendar.MONTH) + 1;
//                String sdia = "";
//                String smes = "";
//                if (dia < 10)
//                {
//                    sdia = "0";
//                }
//                sdia += dia;
//                if (mes < 10)
//                {
//                    smes = "0";
//                }
//                smes += mes;                   
//                String fecha2 = cal.get(Calendar.YEAR) + "-" + smes + "-" + sdia;
//                fechafin=fecha2;
//               ver_conex conn =new ver_conex();
//                conn.sentencia = conn.conexion.createStatement();
//                conn.resultado = conn.sentencia.executeQuery("CALL verif_fecha ('"+fechafin+"', '"+fecha_inicio+"')");
//                boolean encontro = conn.resultado.next();
//                if (encontro == true)
//                {
//                    if (conn.resultado.getString("resul").equals("error"))
//                {
//                 JOptionPane.showMessageDialog(null, "LA FECHA FINAL DEBE CORERSPONDER A ESTE AÑO","ATENCION", JOptionPane.WARNING_MESSAGE);
//                
//                }
//                 else
//              {
//                  
//                    
//                if (conn.resultado.getString("resul").equals("verdadero"))
//                {
//                 codprodu.setEnabled(true);
//                 codprodu.requestFocus();
//                fechafinal.setEnabled(false);
//                
//                } 
//                
//
//                else
//              {
//                JOptionPane.showMessageDialog(null, "LA FECHA FINAL NO PUEDE SER MENOR A LA FECHA INICIAL","ATENCION", JOptionPane.WARNING_MESSAGE);
//                }
//                
//                }
//                   }
//                else
//                    {
//                JOptionPane.showMessageDialog(null, "NO ESTA VERIFICANDO","ATENCION", JOptionPane.INFORMATION_MESSAGE);
//                }
//            }
//         catch (SQLException ex)
//                {
//                    Logger.getLogger(orden_produccion.class.getName()).log(Level.SEVERE, null, ex);
//                }
}
